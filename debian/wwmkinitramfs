#!/bin/sh
#
# Warewulf Copyright (c) 2001-2003 Gregory M. Kurtzer
#
# Warewulf Copyright (c) 2003-2013, The Regents of the University of
# California, through Lawrence Berkeley National Laboratory (subject to
# receipt of any required approvals from the U.S. Dept. of Energy).
# All rights reserved.
#
# Warewulf Copyright (c) 2019 System Fabric Works, Inc. <info@systemfabricworks.com>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# (1) Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# (2) Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# (3) Neither the name of the University of California, Lawrence Berkeley
# National Laboratory, U.S. Dept. of Energy nor the names of its contributors
# may be used to endorse or promote products derived from this software
# without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# You are under no obligation whatsoever to provide any bug fixes, patches,
# or upgrades to the features, functionality or performance of the source
# code ("Enhancements") to anyone; however, if you choose to make your
# Enhancements available either publicly, or directly to Lawrence Berkeley
# National Laboratory, without imposing a separate written license agreement
# for such Enhancements, then you hereby grant the following license: a
# non-exclusive, royalty-free perpetual license to install, use, modify,
# prepare derivative works, incorporate into other computer software,
# distribute, and sublicense such enhancements or derivative works thereof,
# in binary and source code form.
#

#
# Build initramfs image for warewulf on Debian, using mkinitramfs.
#

set -e

RUN_DIR=$(pwd)
MACHINE=$(uname -m)
WW_INITRAMFS_DIR=$(wwconfig STATEDIR)/warewulf/initramfs/$MACHINE
WW_HOOKS_DIR=$(wwconfig LIBEXECDIR)/warewulf/wwmkinitramfs/hooks

EXTRACT_DIR=
INSTALL=0
KEEP_WORK=0
VERBOSE_FLAG=
INITRD="ww-initrd-$(uname -r)"

usage() {
	cat <<EOF
Usage: $0 [OPTION]
Create initrd image for warewulf bootstrap.
  -h         this message
  -H DIR     specify directory that contains WW hooks
  -i         install image into $WW_INITRAMFS_DIR
  -k         keep working directory
  -o FILE    specify output file (default $INITRD)
  -v         verbose output
  -x DIR     extract image into specified directory
EOF
}

while [ $# -gt 0 ] ; do
	  ARG=$1
	  case "$ARG" in
	  -x)  shift
	  	   EXTRACT_DIR="$1"
		   ;;
	  -o)  shift
		   INITRD="$1"
		   ;;
	  -v)  VERBOSE_FLAG="-v"
		   ;;
	  -i)  INSTALL=1
		   ;;
	  -H)  shift
		   WW_HOOKS_DIR="$1"
		   ;;
	  -k)  KEEP_WORK=1
		   ;;
	  -h)  usage
	  	   exit 0
		   ;;
	  *)   echo "ERROR: $0: unrecognized argument: $ARG"
	  	   exit 1
		   ;;
	  esac
	  shift	  
done

if [ ! -z "$EXTRACT_DIR" -a ! -d "$EXTRACT_DIR" ] ; then
   echo "ERROR: extraction directory $EXTRACT_DIR does not exist"
   exit 1
fi

if [ -e "$INITRD" ] ; then
	echo "ERROR: output file $INITRD already exists"
	exit 1
fi

if [ $INSTALL -eq 1 -a -e "$WW_INITRAMFS_DIR/base" ] ; then
   	echo "ERROR: installation target $WW_INITRAMFS_DIR/base already exists"
	exit 1
fi

WORK_DIR=$(mktemp -d /tmp/wwmkinitramfs.XXXXX)
CONF_DIR="$WORK_DIR/conf"
INITRAMFS_DIR="$WORK_DIR/initramfs"
TMPINITRD="$WORK_DIR/initramfs/initrd.gz"

echo "Building in $WORK_DIR"
mkdir -p "$CONF_DIR" "$INITRAMFS_DIR"

cat << EOM > "$CONF_DIR/initramfs.conf"
MODULES=most
BUSYBOX=auto
KEYMAP=n
COMPRESS=gzip
DEVICE=
NFSROOT=auto
RESUME=none
EOM

> "$CONF_DIR/modules"
ln -s /etc/initramfs-tools/scripts "$CONF_DIR"
mkdir "$CONF_DIR/hooks"
cp "$WW_HOOKS_DIR/ww-hook" "$CONF_DIR/hooks"

/usr/sbin/mkinitramfs $VERBOSE_FLAG -d "$CONF_DIR" -o "$TMPINITRD"
zcat "$TMPINITRD" > "$INITRD"
echo "Built $INITRD"
INITRD=$(realpath "$INITRD")

if [ ! -z "$EXTRACT_DIR" ] ; then
   echo "Extracting to $EXTRACT_DIR"
   cd "$EXTRACT_DIR"
   cat "$INITRD" | cpio -id
   cd "$RUN_DIR"
fi

if [ $INSTALL -eq 1 ] ; then
   echo "Installing $INITRD to $WW_INITRAMFS_DIR/base"	
   if [ -f "$WW_INITRAMFS_DIR/base" ] ; then
   	   echo "ERROR: installation target $WW_INITRAMFS_DIR/base already exists"
	   exit 1
   fi
   cp "$INITRD" "$WW_INITRAMFS_DIR/base"
fi

if [ $KEEP_WORK -ne 1 ] ; then
   rm -rf "$WORK_DIR"
fi
